apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven'

def enablePublishing = properties.containsKey('enablePublishing')
if (enablePublishing) {
    println "* CORE PUBLISHING = ENABLED"
    apply from: rootProject.file('gradle/publish.gradle')
}

project.group = properties.get('POM_GROUP')
version = properties.get('POM_VERSION')

android {
    compileSdkVersion properties.get('COMPILE_SDK_VERSION', 25)
    buildToolsVersion properties.get('BUILD_TOOLS_VERSION', '25.0.2')

    defaultConfig {
        minSdkVersion properties.get('MIN_SDK_VERSION', 16)
        targetSdkVersion properties.get('TARGET_SDK_VERSION', 25)

        versionCode 1
        versionName properties.get('POM_VERSION')

        testApplicationId "com.mobilesolutionworks.android.controller.test"
        testInstrumentationRunner "test.runner.TestButlerTestRunner"
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            androidTest.java.srcDirs += ['src/androidTest/mock']
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled = false
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

def supportLibVersion = properties.get('SUPPORT_LIB_VERSION', '25.1.0')
dependencies {
    androidTestCompile project(':test-utility')
    testCompile 'junit:junit:4.12'

    provided 'com.android.support:appcompat-v7:' + supportLibVersion
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    kapt "com.android.databinding:compiler:$android_gradle_version"
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts.add('archives', sourcesJar)
repositories {
    mavenCentral()
}